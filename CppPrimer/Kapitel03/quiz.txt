1. 为什么c++有这么多整形？
    有多种整形类型，可以根据特定需求选择最合适的类型。例如，可以使用short来存储空格，使用long来确保储存容量，
    也可以寻找可提高特定计算速度的类型。
2. 声明下述变量
    a. short 整数， 值为80 -- short num = 80;
    b. unsigned int 整数， 值为 42110 -- unsigned int = 42110;
    c. 值为3000000000 的整数 -- unsigned long = 3000000000;

3. C++提供了什么措施来防止超出整形的范围？
    C++没有提供自动防止超出整形限制的功能， 可以使用头文件climits来确定限制情况。

4. 33L 和 33 的 区别？
    33L的类型为 long，33的类型为 int

5. 下面两条C++语句是否等价？
    char grade = 65;
    char grade = 'A'; 

    并不真正等价，虽然对于某些系统来说，他们是等效的。最重要的是，只有在使用ASCII码的系统上，第一条语句才将设置为 ‘A'，
    而第二条语句还可用于使用其他编码的系统。其次，65是一个int常量，而’A'是一个char常量。

6. 如何使用C++来找出编码88表示的字符？两种方法
    a.  char a = 88; 
        cout << a << endl;
    b.  int  b = 88;
        cout << char(88) << endl;
    c.  cout.put (char(88));
    d.  cout << (char) 88 << endl;

7. 将long值赋给float会导致舍入误差，将long赋给double呢？
    取决于两个类型的长度，如果long为4个字节，则没有损失。因为最大的long值为20亿，既有10位数。
    由于double提供了至少13位的有效数字，因而不需要进行任何舍入。

8. 下列C++表达式的结果分别是多少？
    a. 8*9 + 2 == 74
    b. 6 * 3 / 4 == 4
    c. 3 / 4 * 6 == 0
    d. 6.0 * 3 / 4 == 4.5
    e. 15 % 4 == 3

9. 假设x1 和 x2 是两个类型为double的变量，而要将他们作为整数，并相加，然后将结果赋给一个整形变量。
    double x1, x2;
    int x3 = int (x1) + int (x2);

